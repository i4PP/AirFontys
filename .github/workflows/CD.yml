name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches:
      - main

jobs:
  # Job for building and pushing the Vite front-end
  build-and-push-front-end:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18' # Set to the version you need

    - name: Install dependencies and build front-end
      run: |
        cd ./front-end # Adjust if your front-end code is in a different directory
        npm install
        npm run build

    - name: Build Docker Image for Vite Front-end
      run: |
        cd ./front-end
        docker build -t abdulqal/vite-front-end:latest .

    - name: Log in to Docker Hub
      env:
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: echo "$DOCKER_ACCESS_TOKEN" | docker login -u abdulqal --password-stdin

    - name: Push Docker Image for Vite Front-end
      run: docker push abdulqal/vite-front-end:latest

  # Job for building and pushing back-end services
  build-and-push-back-end:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        include:
          - service: "FlightAPI"
            image-name: "flight-api"
          - service: "authentication"
            image-name: "auth"
          - service: "OrderAPI"
            image-name: "orderapi"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build Docker Image for ${{ matrix.service }}
      run: docker build -t abdulqal/${{ matrix.image-name }}:latest "./${{ matrix.service }}"

    - name: Log in to Docker Hub
      env:
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: echo "$DOCKER_ACCESS_TOKEN" | docker login -u abdulqal --password-stdin

    - name: Push Docker Image for ${{ matrix.service }}
      run: docker push abdulqal/${{ matrix.image-name }}:latest
